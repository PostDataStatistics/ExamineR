(templateExam=paste("Junio-enunciado-sanitaria-16-17-",language,"-",sep="",collapse=""))
(templateAnswer=paste("Junio-enunciado-sanitaria-16-17-sol-",language,"-",sep="",collapse=""))
# examen sanitaria 2pp
set.seed(20170607)
# Para generar un pdf
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
#    sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
# A veces tarda, así que para ver fácilmente que ha acabado, ejecutamos.
2*2
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
#    sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
rm(list=ls())
setwd("~/Dropbox/Public/docencia/MoodleR/GitHubRepoLocalwork/ExamineR")
########################################################################
# PostData Statistics:
# Un curso de introducci?n a la Estad?stica, pensado para principiantes
#
# Fernando San Segundo, Marcos Marva
#
# Web: www.postdata-statistics.com
# Mail: postdatastatistics@gmail.com
########################################################################
# Fichero para generar cuestionarios de examen
# usando el paquete exams de R
#
########################################################################
rm(list=ls())
# (dirTrabajo="/home/marcos/Dropbox/Public/docencia/MoodleR/GitHubRepo/ExamineR/" )
(dirTrabajo="/home/marcos/Dropbox/Public/docencia/MoodleR/GitHubRepoLocalwork/ExamineR" )
setwd(dirTrabajo)
odir=getwd()
(dirTemporal=paste(odir,"/temp",sep=""))
library("exams")
## Set the language code for your exam
language='es'
(templateExam=paste("Junio-enunciado-sanitaria-16-17-",language,"-",sep="",collapse=""))
(templateAnswer=paste("Junio-enunciado-sanitaria-16-17-sol-",language,"-",sep="",collapse=""))
# examen sanitaria 2pp
set.seed(20170607)
# Para generar un pdf
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
sample(c("040401.Rnw", "040402.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
"03020401.Rnw", # Probability of an interval, affine-like density function function (en - es - num)
# sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
sample(c( "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
"03020401.Rnw", # Probability of an interval, affine-like density function function (en - es - num)
# sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
"040501.Rnw", # sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
"03020401.Rnw", # Probability of an interval, affine-like density function function (en - es - num)
# sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
"050402.Rnw", #sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
########################################################################
# PostData Statistics:
# Un curso de introducci?n a la Estad?stica, pensado para principiantes
#
# Fernando San Segundo, Marcos Marva
#
# Web: www.postdata-statistics.com
# Mail: postdatastatistics@gmail.com
########################################################################
# Fichero para generar cuestionarios de examen
# usando el paquete exams de R
#
########################################################################
rm(list=ls())
# (dirTrabajo="/home/marcos/Dropbox/Public/docencia/MoodleR/GitHubRepo/ExamineR/" )
(dirTrabajo="/home/marcos/Dropbox/Public/docencia/MoodleR/GitHubRepoLocalwork/ExamineR" )
setwd(dirTrabajo)
odir=getwd()
(dirTemporal=paste(odir,"/temp",sep=""))
library("exams")
## Set the language code for your exam
language='es'
(templateExam=paste("Junio-enunciado-sanitaria-16-17-",language,"-",sep="",collapse=""))
(templateAnswer=paste("Junio-enunciado-sanitaria-16-17-sol-",language,"-",sep="",collapse=""))
# examen sanitaria 2pp
set.seed(20170607)
# Para generar un pdf
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
"03020401.Rnw", # Probability of an interval, affine-like density function function (en - es - num)
# sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
"050402.Rnw", #sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
# A veces tarda, así que para ver fácilmente que ha acabado, ejecutamos.
2*2
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
"03020401.Rnw", # Probability of an interval, affine-like density function function (en - es - num)
# sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
"050402.Rnw", #sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
########################################################################
# PostData Statistics:
# Un curso de introducci?n a la Estad?stica, pensado para principiantes
#
# Fernando San Segundo, Marcos Marva
#
# Web: www.postdata-statistics.com
# Mail: postdatastatistics@gmail.com
########################################################################
# Fichero para generar cuestionarios de examen
# usando el paquete exams de R
#
########################################################################
rm(list=ls())
# (dirTrabajo="/home/marcos/Dropbox/Public/docencia/MoodleR/GitHubRepo/ExamineR/" )
(dirTrabajo="/home/marcos/Dropbox/Public/docencia/MoodleR/GitHubRepoLocalwork/ExamineR" )
setwd(dirTrabajo)
odir=getwd()
(dirTemporal=paste(odir,"/temp",sep=""))
library("exams")
## Set the language code for your exam
language='es'
(templateExam=paste("Junio-enunciado-sanitaria-16-17-",language,"-",sep="",collapse=""))
(templateAnswer=paste("Junio-enunciado-sanitaria-16-17-sol-",language,"-",sep="",collapse=""))
# examen sanitaria 2pp
# set.seed(20170607)
# Para generar un pdf
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
"03020401.Rnw", # Probability of an interval, affine-like density function function (en - es - num)
# sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
"050402.Rnw", #sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
# A veces tarda, así que para ver fácilmente que ha acabado, ejecutamos.
2*2
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
"03020401.Rnw", # Probability of an interval, affine-like density function function (en - es - num)
# sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
"050402.Rnw", #sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
"03020401.Rnw", # Probability of an interval, affine-like density function function (en - es - num)
# sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
"040402.Rnw", #sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
"03020401.Rnw", # Probability of an interval, affine-like density function function (en - es - num)
# sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
"040402.Rnw", #sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
"03020401.Rnw", # Probability of an interval, affine-like density function function (en - es - num)
# sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
"040402.Rnw", #sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
exams2pdf( c( sample(c("020001.Rnw", "020002.Rnw", "020003.Rnw", "020004.Rnw"), size = 1), # prob basica
sample(c("03010201.Rnw", "03010202.Rnw", "03010203.Rnw"), size = 1), # v.a. media tabla, completa tabla, juego justo
"03020401.Rnw", # Probability of an interval, affine-like density function function (en - es - num)
# sample(c("04030102.Rnw", "04030105.Rnw", "04030105.Rnw"), size = 1), # v.a. prob normal
"040402.Rnw", #sample(c("040401.Rnw", "040402.Rnw", "040501.Rnw", "040502.Rnw"), size = 1), # valor critico t-Student, chi^2
sample(c("050401.Rnw", "050402.Rnw", "050501.Rnw", "050502.Rnw"), size = 1), # IC proporcion,  varianza
sample(c("060104.Rnw", "060105.Rnw", "060106.Rnw", "060107.Rnw"), size = 1), # v.a. rejection region
sample(c("070101.Rnw", "070101.Rnw"), size = 1), # coefs recta regresion
sample(c("08010101.Rnw", "08010201.Rnw"), size = 1) # chi^2 independencia
), dir=odir, template=c(templateExam,templateAnswer), n = 1)
signifDig <- 4
n = sample(100:500, 1)
data = c(sample(1:30, n, replace=TRUE))
(dataDF = data.frame(x=data))
(frequencies = as.vector(table(data)))
(orderedUniqueValues = sort(unique(data)))
table(data)
cbind(orderedUniqueValues, frequencies)
(sol = unname(frecTableForQuestion[orderedUniqueValues == chooseValue, ][2]))
frecTableForQuestion = cbind(orderedUniqueValues, frequencies)
(chooseValue = sample(data, 1))
(sol = unname(frecTableForQuestion[orderedUniqueValues == chooseValue, ][2]))
(sol = signif(sol, 4))
frecTableForQuestion = cbind(orderedUniqueValues, signif(frequencies/n, digits = 4))
frecTableForQuestion
rm(list=ls())
library("exams")
# exams_skeleton(markup = "markdown", encoding = "UTF-8",
#                writer = c("exams2html", "exams2pdf", "exams2moodle"))
language="es"
seedValue = 2018
exercises = c("010002.Rmd",  "010003.Rmd",
"050101.Rmd",  "050201.Rmd", "050301.Rmd")
source("attachFile.R")
set.seed(seedValue)
if(language == "en"){
exams2pdf(file = exercises,
solution=TRUE,
template = c("plain.tex", "solution.tex"))
} else if(language == "es")  {
exams2pdf(file = exercises,
solution=TRUE,
template = c("plain_es.tex", "solution_es.tex"))
}
set.seed(seedValue)
exams2html(file = exercises, mathjax = TRUE, solution = TRUE, dir = ".",
template = c("plain_es.html"))
setwd("~/Dropbox/ExamineR/repo/ExamineR/newVersion")
rm(list=ls())
library("exams")
# exams_skeleton(markup = "markdown", encoding = "UTF-8",
#                writer = c("exams2html", "exams2pdf", "exams2moodle"))
language="es"
seedValue = 2018
exercises = c("010002.Rmd",  "010003.Rmd",
"050101.Rmd",  "050201.Rmd", "050301.Rmd")
source("attachFile.R")
set.seed(seedValue)
if(language == "en"){
exams2pdf(file = exercises,
solution=TRUE,
template = c("plain.tex", "solution.tex"))
} else if(language == "es")  {
exams2pdf(file = exercises,
solution=TRUE,
template = c("plain_es.tex", "solution_es.tex"))
}
set.seed(seedValue)
exams2html(file = exercises, mathjax = TRUE, solution = TRUE, dir = ".",
template = c("plain_es.html"))
n = sample(100:500, 1)
data = c(sample(1:30, n, replace=TRUE))
(frequencies = cumsum(table(data)))
(orderedUniqueValues = sort(unique(data)))
(cumfrequencies = cumsum(table(data)))
(orderedUniqueValues = sort(unique(data)))
frecTableForQuestion = cbind(orderedUniqueValues, signif(cumfrequencies, digits = 4))
frecTableForQuestion
(chooseValue = sample(data, 1))
(sol = unname(frecTableForQuestion[orderedUniqueValues == chooseValue, ][2]))
(sol = signif(sol, 4))
rm(list=ls())
library("exams")
# exams_skeleton(markup = "markdown", encoding = "UTF-8",
#                writer = c("exams2html", "exams2pdf", "exams2moodle"))
language="es"
seedValue = 2018
exercises = c("010002.Rmd",  "010102.Rmd", "010202.Rmd",
"050101.Rmd",  "050201.Rmd", "050301.Rmd")
source("attachFile.R")
set.seed(seedValue)
if(language == "en"){
exams2pdf(file = exercises,
solution=TRUE,
template = c("plain.tex", "solution.tex"))
} else if(language == "es")  {
exams2pdf(file = exercises,
solution=TRUE,
template = c("plain_es.tex", "solution_es.tex"))
}
set.seed(seedValue)
exams2html(file = exercises, mathjax = TRUE, solution = TRUE, dir = ".",
template = c("plain_es.html"))
signifDig <- 4
n = sample(15:20, 1)
data = c(sample(1:30, n, replace=TRUE))
(frequencies = as.vector(table(data)))
signifDig <- 4
n = sample(15:20, 1)
data = c(sample(1:15, n, replace=TRUE))
(frequencies = as.vector(table(data)))
n = sample(15:20, 1)
data = c(sample(1:10, n, replace=TRUE))
(frequencies = as.vector(table(data)))
n = sample(15:20, 1)
data = c(sample(1:10, n, replace=TRUE))
(frequencies = as.vector(table(data)))
n = sample(15:20, 1)
data = c(sample(1:10, n, replace=TRUE))
(frequencies = as.vector(table(data)))
n = sample(15:20, 1)
data = c(sample(1:10, n, replace=TRUE))
(frequencies = as.vector(table(data)))
n = sample(15:20, 1)
data = c(sample(1:10, n, replace=TRUE))
(frequencies = as.vector(table(data)))
(orderedUniqueValues = sort(unique(data)))
frecTableForQuestion = cbind(orderedUniqueValues, frequencies)
(chooseValue = sample(data, 1))
(sol = unname(frecTableForQuestion[orderedUniqueValues == chooseValue, ][2]))
frecTableForQuestion
(sol = signif(sol, 4))
paste0(data, collapse = ", ")
question=paste0("Given the set of values $$", paste0(data, collapse = ", "),"$$ construct their **absolute frequency** table, and find the **absolute frequency** of the value ", chooseValue, ".")
question
rm(list=ls())
library("exams")
# exams_skeleton(markup = "markdown", encoding = "UTF-8",
#                writer = c("exams2html", "exams2pdf", "exams2moodle"))
language="es"
seedValue = 2018
exercises = c("010001.Rmd", "010002.Rmd",
"010102.Rmd",
"010202.Rmd",
"050101.Rmd",  "050201.Rmd", "050301.Rmd")
source("attachFile.R")
set.seed(seedValue)
if(language == "en"){
exams2pdf(file = exercises,
solution=TRUE,
template = c("plain.tex", "solution.tex"))
} else if(language == "es")  {
exams2pdf(file = exercises,
solution=TRUE,
template = c("plain_es.tex", "solution_es.tex"))
}
set.seed(seedValue)
exams2html(file = exercises, mathjax = TRUE, solution = TRUE, dir = ".",
template = c("plain_es.html"))
rm(list=ls())
library("exams")
# exams_skeleton(markup = "markdown", encoding = "UTF-8",
#                writer = c("exams2html", "exams2pdf", "exams2moodle"))
language="es"
seedValue = 2018
exercises = c("010001.Rmd", "010002.Rmd",
"010102.Rmd",
"010202.Rmd",
"050101.Rmd",  "050201.Rmd", "050301.Rmd")
source("attachFile.R")
set.seed(seedValue)
if(language == "en"){
exams2pdf(file = exercises,
solution=TRUE,
template = c("plain.tex", "solution.tex"))
} else if(language == "es")  {
exams2pdf(file = exercises,
solution=TRUE,
template = c("plain_es.tex", "solution_es.tex"))
}
set.seed(seedValue)
exams2html(file = exercises, mathjax = TRUE, solution = TRUE, dir = ".",
template = c("plain_es.html"))
(relFrequencies = format(as.vector(table(data) / n), 4))
(relFrequencies = as.vector(table(data) / n))
(relFrequencies = table(data) / n)
signifDig <- 4
n = sample(15:20, 1)
data = c(sample(1:10, n, replace=TRUE))
(relFrequencies = table(data) / n)
(relFrequencies = format(table(data) / n, 4))
(relFrequencies = signif(table(data) / n, 4))
(orderedUniqueValues = sort(unique(data)))
frecTableForQuestion = cbind(orderedUniqueValues, relFrequencies)
frecTableForQuestion
(relFrequencies = unname(signif(table(data) / n, 4)))
(orderedUniqueValues = sort(unique(data)))
frecTableForQuestion = cbind(orderedUniqueValues, relFrequencies)
frecTableForQuestion
(chooseValue = sample(data, 1))
(sol = unname(frecTableForQuestion[orderedUniqueValues == chooseValue, ][2]))
(sol = signif(sol, 4))
signifDig <- 4
n = sample(15:20, 1)
data = c(sample(1:10, n, replace=TRUE))
(cumFrequencies = cumsum(table(data)))
(orderedUniqueValues = sort(unique(data)))
frecTableForQuestion = cbind(orderedUniqueValues, cumFrequencies)
frecTableForQuestion
(chooseValue = sample(data, 1))
(sol = unname(frecTableForQuestion[orderedUniqueValues == chooseValue, ][2]))
(sol = signif(sol, signifDig))
rm(list=ls())
library("exams")
# exams_skeleton(markup = "markdown", encoding = "UTF-8",
#                writer = c("exams2html", "exams2pdf", "exams2moodle"))
language="es"
seedValue = 2018
exercises = c("010001.Rmd", "010002.Rmd",
"010101.Rmd", "010102.Rmd",
"010201.Rmd", "010202.Rmd",
"050101.Rmd",  "050201.Rmd", "050301.Rmd")
source("attachFile.R")
set.seed(seedValue)
if(language == "en"){
exams2pdf(file = exercises,
solution=TRUE,
template = c("plain.tex", "solution.tex"))
} else if(language == "es")  {
exams2pdf(file = exercises,
solution=TRUE,
template = c("plain_es.tex", "solution_es.tex"))
}
set.seed(seedValue)
exams2html(file = exercises, mathjax = TRUE, solution = TRUE, dir = ".",
template = c("plain_es.html"))
library(shiny); runApp('~/Dropbox/ExamineR/repo/ExamineR/exclude/knitrTest/shiny/app2.R')
